<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" style="height: 100%">
<head>
    <meta charset="utf-8" />
    <title>AzInfo</title>
    <link rel="stylesheet" href="styles/app.css" type="text/css" />
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
    <script type="text/javascript" src="https://silverscript.azurewebsites.net/scripts/silverscript.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/yamljs/0.2.10/yaml.min.js"></script>
    <script type="text/javascript" src="scripts/app.js"></script>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

    <script type="text/javascript">
    var appInsights = window.appInsights || function (config) {
        function i(config) { t[config] = function () { var i = arguments; t.queue.push(function () { t[config].apply(t, i) }) } } var t = { config: config }, u = document, e = window, o = "script", s = "AuthenticatedUserContext", h = "start", c = "stop", l = "Track", a = l + "Event", v = l + "Page", y = u.createElement(o), r, f; y.src = config.url || "https://az416426.vo.msecnd.net/scripts/a/ai.0.js"; u.getElementsByTagName(o)[0].parentNode.appendChild(y); try { t.cookie = u.cookie } catch (p) { } for (t.queue = [], t.version = "1.0", r = ["Event", "Exception", "Metric", "PageView", "Trace", "Dependency"]; r.length;)i("track" + r.pop()); return i("set" + s), i("clear" + s), i(h + a), i(c + a), i(h + v), i(c + v), i("flush"), config.disableExceptionTracking || (r = "onerror", i("_" + r), f = e[r], e[r] = function (config, i, u, e, o) { var s = f && f(config, i, u, e, o); return s !== !0 && t["_" + r](config, i, u, e, o), s }), t
    }({
        instrumentationKey: "f51994ee-2321-4a44-8034-befde039a631"
    });

    window.appInsights = appInsights;
    appInsights.trackPageView();

    var activeToggles = new Object();
    var toggle = function (origin,toggleKey)
    {
        if (activeToggles[toggleKey] != undefined) {
            activeToggles[toggleKey].removeClass('active');
        }
        var jorigin = $(origin);
        activeToggles[toggleKey] = jorigin;
        jorigin.addClass('active');
        }

        function makelink(txt) // Make a real link from this potential link
        {
            txt = html2spchrs(txt); // Undo any html special characters in this link
            var i = 0;

            // Clean the front end
            pN = txt.length - 1;
            for (i = 0; i < pN; i++) {
                ch = txt.substr(i, 1); // Look at each character
                if (ch.search(/\w/) > -1) break; // Stop looping when a word char is found
            }
            prea = txt.substring(0, i); // Copy the pre anchor stuff
            prea = spchrs2html(prea) // Redo any html special characters in this link
            txt = txt.substr(i); // Trim the preamble from the link

            // Clean the trailing end
            for (i = pN; i > 0; i--) {
                ch = txt.substr(i, 1); // Look back at each character
                if (ch.search(/\w|_|-|\//) > -1) break; // Loop until a legal trailing char is found
            }
            posta = txt.substring(i + 1); // Copy the post anchor stuff
            posta = spchrs2html(posta) // Redo any html angle bracket codes in this link

            turl = txt.substring(0, i + 1); // and detach it from the rest - this is the legit URL

            // If the URL is an email address, link as a mailto:
            if (turl.search(/@/) > 0) {
                tlnk = "<a href='mailto:" + turl + "'>" + turl + "</a>";
                return prea + tlnk + posta;
            }
            // Not a mailto, treat as a document URL
            hurl = ""
            if (turl.search(/\w+:\/\//) < 0) hurl = "http://"; // Add http:// if no xxxx:// already there
            tlnk = "<a href='" + hurl + turl + "'>" + turl + "</a>";
            return prea + tlnk + posta;
        }

        function spchrs2html(str) {
            str = str.replace(/&/g, "&amp;");
            str = str.replace(/</g, "&lt;"); // Convert angle brackets to HTML codes in string
            str = str.replace(/>/g, "&gt;");
            return str;
        }

        function html2spchrs(str) {
            str = str.replace(/&lt;/g, "<"); // Undo any angle bracket codes in this link
            str = str.replace(/&gt;/g, ">");
            str = str.replace(/&amp;/g, "&");
            return str;
        }
        var objectToHtmlConverter = function (obj) {
            var tlnk = new Array; //Create an array to hold the potential links
            var hlnk = new Array; //Create an array to hold the HTML translation

            // First, translate special characters to HTML
            var $text = spchrs2html(YAML.stringify(obj));

            // Loop through the clear text 
            var i = 0;
            for (i = 0; i < 4; i++) // Set ;i<20; to a reasonable limit here
            {
                // Get a potential link and mark where it came from
                $text = $text.replace(/(\S+\.\S+)/, "<" + i + ">"); // look for dots that are surrounded by non-whitespace characters
                tlnk[i] = RegExp.$1;
            } // EOLoop
            ac = i;
            //?** too many loops - need a break **
            // Loop through the array of potential links and make replacements
            for (i = 0; i < ac; i++) {
                // If this is a number, (e.g. 6.4sec; $5.00 etc.) OR too short; restore original and skip it
                if (tlnk[i].search(/\d\.\d/) > -1 || tlnk[i].length < 5) // Search for digit.digit OR len < 5 in this potential link
                {
                    $text = $text.replace("<" + i + ">", tlnk[i]);
                }
                else {
                    // Make this URL into a real link - move brackets and punctuation outside of the anchor tag
                    htm = makelink(tlnk[i]);
                    $text = $text.replace("<" + i + ">", htm);
                }
            }

            // Now put the breaks on
            $text = $text.replace(/\n/g, "<br/>");
            // And deal with multiple spaces
            $text = $text.replace(/\ \ /g, " &nbsp;");
            // And any other specials
            $text = $text.replace(/"/g, "&quot;");
            $text = $text.replace(/\$/g, "&#36;");

            return $text;
        }
    </script>
</head>

<body style="margin:0px">

    <div style="position: relative; padding-left: 17px; padding-top: 6px; font-size: large; width: 100%; background: #666666; height: 65px; color: white">
        <div style="max-width:980px;margin-left:auto;margin-right:auto">
            <button onclick="SS.SetTemplate('MainPage','views/WhatIsIt.html');" style="width: 130px; margin:5px; color:white">What is it ?</button>
            <button onclick="SS.SetTemplate('MainPage','views/byDC/ByDC.html');" style="width: 130px; margin:5px; color:white">Datacenters</button>
            <button onclick="SS.SetTemplate('MainPage','views/byOperation/byOperation.html');" style="width: 150px; margin:5px; color:white">Operations</button>
            <button onclick="SS.SetTemplate('MainPage','views/byVersion/byVersion.html');" style="width: 180px;margin:5px; color:white">Api Versions</button>
            <button onclick="SS.SetTemplate('MainPage','views/RestApis.html');" style="width: 180px;margin:5px; color:white">Rest Api</button>
        </div>
    </div>
    <div style="position: relative; font-size: large; width: 100%; background-color: white; height: 3px; background-image: linear-gradient(gray,white)">
    </div>
    <div class="col-md-1">
    </div>
    <div id="MainPage" class="col-md-11" data-template="views/WhatIsIt.html" style="margin-left:auto;margin-right:auto">

    </div>

    <div id="overlayZone" style="position: absolute;background-color:lightgray;width:600px; padding:7px; display:none;border-radius:3px">
            Verbs: <span data-binding="{Verb}"></span><br />
            Api Version:<span data-binding="{ApiVersion}"></span><br />
            Provider: <span data-binding="{Provider}"></span><br />
            Resource Type: <span data-binding="{ResourceType}"></span><br />
            Datacenter: <span data-binding="{DataCenter}"></span><br />
            Operation: <span data-binding="{Operation}"></span> 
    </div>

    <div id="popupZone" style="width:100%;height:100%;  display:none;  z-index: 999999;">
        <div style=" z-index: 999999;top:0;bottom: 0;left: 0;right: 0;position: absolute;background-color:#eeeeee;opacity: 0.7;width:100%;height:100%"></div>
        <div style="  z-index: 999999;top:0;bottom: 0;left: 0;right: 0;position: absolute;margin: auto;padding:20px; border-radius:4px; background-color:white;width:800px;height:600px;overflow-y:auto;max-height:600px;">
            <a href="#" style="font-size:xx-large;float:right" onclick="$('#popupZone').hide()" >X</a>
            Verbs: <span data-binding="{Verb}"></span><br />
            Api Version:<span data-binding="{ApiVersion}"></span><br />
            Provider: <span data-binding="{Provider}"></span><br />
            Resource Type: <span data-binding="{ResourceType}"></span><br />
            Datacenter: <span data-binding="{DataCenter}"></span><br />
            Operation: <span data-binding="{Operation}"></span>  <br/>
            ---------------------------------------------------------------<br/>
            <br/>  
            <span data-binding="{p=OperationDetails,c=objectToHtmlConverter}"></span> 
        </div>
    </div>

</body>
</html>
